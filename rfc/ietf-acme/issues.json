[
  {
    "url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/63",
    "labels_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/63/labels{/name}",
    "comments_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/63/comments",
    "events_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/63/events",
    "html_url": "https://github.com/ietf-wg-acme/acme/issues/63",
    "id": 124272009,
    "number": 63,
    "title": "Change authorization expiry from a date to a timestamp",
    "user": {
      "login": "hlandau",
      "id": 2270010,
      "avatar_url": "https://avatars.githubusercontent.com/u/2270010?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hlandau",
      "html_url": "https://github.com/hlandau",
      "followers_url": "https://api.github.com/users/hlandau/followers",
      "following_url": "https://api.github.com/users/hlandau/following{/other_user}",
      "gists_url": "https://api.github.com/users/hlandau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hlandau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hlandau/subscriptions",
      "organizations_url": "https://api.github.com/users/hlandau/orgs",
      "repos_url": "https://api.github.com/users/hlandau/repos",
      "events_url": "https://api.github.com/users/hlandau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hlandau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-12-29T21:40:57Z",
    "updated_at": "2015-12-29T21:40:57Z",
    "closed_at": null,
    "body": "Authorization expiry should be a timestamp not a date, to allow for authorizations with very short expiry times.\r\n\r\nAll discussion should be done on the mailing list."
  },
  {
    "url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/62",
    "labels_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/62/labels{/name}",
    "comments_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/62/comments",
    "events_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/62/events",
    "html_url": "https://github.com/ietf-wg-acme/acme/issues/62",
    "id": 124271865,
    "number": 62,
    "title": "Remove implicit renewal",
    "user": {
      "login": "hlandau",
      "id": 2270010,
      "avatar_url": "https://avatars.githubusercontent.com/u/2270010?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hlandau",
      "html_url": "https://github.com/hlandau",
      "followers_url": "https://api.github.com/users/hlandau/followers",
      "following_url": "https://api.github.com/users/hlandau/following{/other_user}",
      "gists_url": "https://api.github.com/users/hlandau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hlandau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hlandau/subscriptions",
      "organizations_url": "https://api.github.com/users/hlandau/orgs",
      "repos_url": "https://api.github.com/users/hlandau/repos",
      "events_url": "https://api.github.com/users/hlandau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hlandau/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-12-29T21:39:20Z",
    "updated_at": "2015-12-29T21:39:20Z",
    "closed_at": null,
    "body": "I proposed on the mailing list to remove implicit renewal some time ago, and it received some support. Creating this issue to track it.\r\n\r\nAll discussion should be done on the mailing list."
  },
  {
    "url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/59",
    "labels_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/59/labels{/name}",
    "comments_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/59/comments",
    "events_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/59/events",
    "html_url": "https://github.com/ietf-wg-acme/acme/issues/59",
    "id": 124134339,
    "number": 59,
    "title": "Add terms-of-service to directory",
    "user": {
      "login": "bifurcation",
      "id": 75597,
      "avatar_url": "https://avatars.githubusercontent.com/u/75597?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bifurcation",
      "html_url": "https://github.com/bifurcation",
      "followers_url": "https://api.github.com/users/bifurcation/followers",
      "following_url": "https://api.github.com/users/bifurcation/following{/other_user}",
      "gists_url": "https://api.github.com/users/bifurcation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bifurcation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bifurcation/subscriptions",
      "organizations_url": "https://api.github.com/users/bifurcation/orgs",
      "repos_url": "https://api.github.com/users/bifurcation/repos",
      "events_url": "https://api.github.com/users/bifurcation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bifurcation/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2015-12-28T22:17:33Z",
    "updated_at": "2015-12-29T00:39:10Z",
    "closed_at": null,
    "body": "Right now, in order to discover the CA's subscriber agreement, you have to create a new registration and get it back in a Link header.  Since this is a static property of the CA, it should be possible to get it without taking any action.  The directory is the natural place for it.  "
  },
  {
    "url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/57",
    "labels_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/57/labels{/name}",
    "comments_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/57/comments",
    "events_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/57/events",
    "html_url": "https://github.com/ietf-wg-acme/acme/issues/57",
    "id": 124133816,
    "number": 57,
    "title": "Add deletion / revocation for registrations and authorizations",
    "user": {
      "login": "bifurcation",
      "id": 75597,
      "avatar_url": "https://avatars.githubusercontent.com/u/75597?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bifurcation",
      "html_url": "https://github.com/bifurcation",
      "followers_url": "https://api.github.com/users/bifurcation/followers",
      "following_url": "https://api.github.com/users/bifurcation/following{/other_user}",
      "gists_url": "https://api.github.com/users/bifurcation/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bifurcation/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bifurcation/subscriptions",
      "organizations_url": "https://api.github.com/users/bifurcation/orgs",
      "repos_url": "https://api.github.com/users/bifurcation/repos",
      "events_url": "https://api.github.com/users/bifurcation/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bifurcation/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2015-12-28T22:11:19Z",
    "updated_at": "2015-12-28T22:11:19Z",
    "closed_at": null,
    "body": "It should be possible for a client to delete his account / registration, and to renounce authorization for a domain.  The right way to do this is probably to define a \"delete\" object that can be POSTed to the reg/account URI, rather than having a separate endpoint (as for certificate revocation)."
  },
  {
    "url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/47",
    "labels_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/47/labels{/name}",
    "comments_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/47/comments",
    "events_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/47/events",
    "html_url": "https://github.com/ietf-wg-acme/acme/issues/47",
    "id": 118211651,
    "number": 47,
    "title": "Clarify how to handle bad requests",
    "user": {
      "login": "richsalz",
      "id": 7332500,
      "avatar_url": "https://avatars.githubusercontent.com/u/7332500?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/richsalz",
      "html_url": "https://github.com/richsalz",
      "followers_url": "https://api.github.com/users/richsalz/followers",
      "following_url": "https://api.github.com/users/richsalz/following{/other_user}",
      "gists_url": "https://api.github.com/users/richsalz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/richsalz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/richsalz/subscriptions",
      "organizations_url": "https://api.github.com/users/richsalz/orgs",
      "repos_url": "https://api.github.com/users/richsalz/repos",
      "events_url": "https://api.github.com/users/richsalz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/richsalz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2015-11-21T18:01:22Z",
    "updated_at": "2015-11-22T18:02:20Z",
    "closed_at": null,
    "body": "We need to clarify when an ACME server can ignore attributes in a request that it doesn't like, and when it should ignore them and proceed.  For example, if a requested validity date is longer than the policy, should it error back or just ignore that attribute and issue a cert good for as long as it wants?  That seems okay.  But what about an unsupported request  for issuance in the future?  Ignoring that seems wrong, and risky.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/4",
    "labels_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/4/labels{/name}",
    "comments_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/4/comments",
    "events_url": "https://api.github.com/repos/ietf-wg-acme/acme/issues/4/events",
    "html_url": "https://github.com/ietf-wg-acme/acme/issues/4",
    "id": 107788116,
    "number": 4,
    "title": "allow ports other than 443",
    "user": {
      "login": "coolaj86",
      "id": 122831,
      "avatar_url": "https://avatars.githubusercontent.com/u/122831?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/coolaj86",
      "html_url": "https://github.com/coolaj86",
      "followers_url": "https://api.github.com/users/coolaj86/followers",
      "following_url": "https://api.github.com/users/coolaj86/following{/other_user}",
      "gists_url": "https://api.github.com/users/coolaj86/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/coolaj86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/coolaj86/subscriptions",
      "organizations_url": "https://api.github.com/users/coolaj86/orgs",
      "repos_url": "https://api.github.com/users/coolaj86/repos",
      "events_url": "https://api.github.com/users/coolaj86/events{/privacy}",
      "received_events_url": "https://api.github.com/users/coolaj86/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2015-09-22T19:50:34Z",
    "updated_at": "2015-11-21T18:03:30Z",
    "closed_at": null,
    "body": "See https://github.com/letsencrypt/acme-spec/issues/33.\r\n\r\nWebservers are already running on 443.\r\n\r\nIf the validation also requires using 443 that means that the admin has to take down their webserver to make port 443 available for the validation and then has to put their webserver back up.\r\n\r\nAlternatively they could use something like HAProxy, but this puts more administrative burden on the user. (I consider myself a fairly knowledgable guy and it took me a few hours of experimentation to arrive at a working solution)\r\n\r\nAlso note that there are a number of ports available for IANA registration:\r\nhttps://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml\r\n\r\nIt looks like port 4 is ripe for an RFC. And 6,8,10,12,14,16,26,28,30,32,34,36,40,60.\r\n\r\nOne of the available ports could be used in place of 443 for validation.\r\n\r\nOr, to make it super simple, the client could request any port below 1024 (or even above it!) to be used for validation / registration."
  }
]
